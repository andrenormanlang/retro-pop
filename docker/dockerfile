# Build Stage
FROM node:20-slim AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
COPY . /app
WORKDIR /app

# Production dependencies stage
FROM base AS prod-deps
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

# Build stage
FROM base AS build
# Define build arguments
ARG NEXT_PUBLIC_SUPABASE_URL
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY
ARG NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
ARG STRIPE_SECRET_KEY
ARG COMIC_VINE_API_KEY
ARG METRON_API_AUTH_HEADER
ARG SUPERHERO_ACCESS_TOKEN
ARG MARVEL_PUBLIC_KEY
ARG MARVEL_PRIVATE_KEY
ARG CHARACTERS_API_URL
ARG SUPABASE_SERVICE_ROLE_KEY
ARG GEMINI_API_KEY

# Validate required environment variables
RUN if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ] || [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ] || [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then \
    echo "Error: Required environment variables are missing" && \
    exit 1; \
    fi

# Set environment variables from build arguments
ENV NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL \
    NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY \
    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY \
    STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY \
    COMIC_VINE_API_KEY=$COMIC_VINE_API_KEY \
    METRON_API_AUTH_HEADER=$METRON_API_AUTH_HEADER \
    SUPERHERO_ACCESS_TOKEN=$SUPERHERO_ACCESS_TOKEN \
    MARVEL_PUBLIC_KEY=$MARVEL_PUBLIC_KEY \
    MARVEL_PRIVATE_KEY=$MARVEL_PRIVATE_KEY \
    CHARACTERS_API_URL=$CHARACTERS_API_URL \
    SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY \
    GEMINI_API_KEY=$GEMINI_API_KEY

# Install all dependencies and build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN NODE_OPTIONS="--max_old_space_size=4096" pnpm run build

# Final production stage
FROM base AS runner
ENV NODE_ENV=production \
    PORT=3000 \
    HOSTNAME="0.0.0.0"

# Copy environment variables to runtime
ENV NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL \
    NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY \
    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY \
    STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY \
    COMIC_VINE_API_KEY=$COMIC_VINE_API_KEY \
    METRON_API_AUTH_HEADER=$METRON_API_AUTH_HEADER \
    SUPERHERO_ACCESS_TOKEN=$SUPERHERO_ACCESS_TOKEN \
    MARVEL_PUBLIC_KEY=$MARVEL_PUBLIC_KEY \
    MARVEL_PRIVATE_KEY=$MARVEL_PRIVATE_KEY \
    CHARACTERS_API_URL=$CHARACTERS_API_URL \
    SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY \
    GEMINI_API_KEY=$GEMINI_API_KEY

# Create a non-root user FIRST
RUN groupadd --system --gid 1001 nodejs && \
    useradd --system --uid 1001 --create-home nextjs

# Copy only production dependencies and built application
COPY --from=prod-deps /app/node_modules /app/node_modules
COPY --from=build /app/.next /app/.next
COPY --from=build /app/public /app/public
COPY --from=build /app/next.config.mjs /app/next.config.mjs
COPY --from=build /app/package.json /app/package.json

WORKDIR /app

# Install curl for healthcheck
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set ownership of /app and create cache directory for nextjs user
RUN chown -R nextjs:nodejs /app && \
    mkdir -p /home/nextjs/.cache/node/corepack && \
    chown -R nextjs:nodejs /home/nextjs/.cache

USER nextjs
EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

CMD ["pnpm", "start"]
