# Build Stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files first for better layer caching
COPY package.json ./

# Install dependencies with --legacy-peer-deps to resolve React 19 compatibility issues
RUN npm install --legacy-peer-deps

# Copy application code - node_modules should be excluded by .dockerignore
COPY . .


# Remove sensitive environment variables from the Dockerfile for security.
# Set them at runtime using docker-compose, your deployment platform, or docker run -e.
# Example: docker run -e SUPABASE_SERVICE_ROLE_KEY=your_key ...
#
# The following environment variables should be set securely at runtime:
#   - COMIC_VINE_API_KEY
#   - METRON_API_AUTH_HEADER
#   - SUPERHERO_ACCESS_TOKEN
#   - MARVEL_PUBLIC_KEY
#   - MARVEL_PRIVATE_KEY
#   - CHARACTERS_API_URL
#   - NEXT_PUBLIC_SUPABASE_URL
#   - NEXT_PUBLIC_SUPABASE_ANON_KEY
#   - NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY
#   - STRIPE_SECRET_KEY
#   - SUPABASE_ACCESS_TOKEN
#   - SUPABASE_SERVICE_ROLE_KEY
#   - GEMINI_API_KEY
#   - supabaseUrl
#   - supabaseKey

#ENV COMIC_VINE_API_KEY=...
#ENV METRON_API_AUTH_HEADER=...
#ENV SUPERHERO_ACCESS_TOKEN=...
#ENV MARVEL_PUBLIC_KEY=...
#ENV MARVEL_PRIVATE_KEY=...
#ENV CHARACTERS_API_URL=...
#ENV NEXT_PUBLIC_SUPABASE_URL=...
#ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=...
#ENV NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY=...
#ENV NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=...
#ENV STRIPE_SECRET_KEY=...
#ENV SUPABASE_ACCESS_TOKEN=...
#ENV SUPABASE_SERVICE_ROLE_KEY=...
#ENV GEMINI_API_KEY=...
#ENV supabaseUrl=...
#ENV supabaseKey=...

# Build with more memory available
RUN NODE_OPTIONS="--max_old_space_size=4096" npm run build -- --no-lint

# Production Stage
FROM node:20-alpine AS runner

WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Copy only necessary files
COPY --from=builder /app/next.config.mjs ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Install curl for healthcheck
RUN apk --no-cache add curl

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app

USER nextjs
EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

CMD ["npm", "start"]
